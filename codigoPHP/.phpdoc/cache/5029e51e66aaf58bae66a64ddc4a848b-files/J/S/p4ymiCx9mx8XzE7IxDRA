1763443222
5029e51e66aaf58bae66a64ddc4a848b-phpdoc%3A0aa51c05cc40e9768cccd243f706baa2-4905c457381da399f75dcf04d4ef5f3a
s:16152:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBuYW1lIjtzOjE1OiJlamVyY2ljaW8xMi5waHAiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaGFzaCI7czozMjoiNDkwNWM0NTczODFkYTM5OWY3NWRjZjA0ZDRlZjVmM2EiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czoxNToiZWplcmNpY2lvMTIucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo5MzYyOiI8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZXMiPgogICAgPGhlYWQ+CiAgICAgICAgPG1ldGEgY2hhcnNldD0iVVRGLTgiPgogICAgICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KICAgICAgICA8dGl0bGU+VsOpcm8gR3J1w6kgLSBQcm95ZWN0b1RlbWEzIEVqZXJjaWNpbzEyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Ii4uL3dlYnJvb3QvY3NzL3N0eWxlRWplcmNpY2lvcy5jc3MiPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPGhlYWRlciBjbGFzcz0iaGVhZGVyIj4KICAgICAgICAgICAgPGgxPkVqZXJjaWNpbyAxMjwvaDE+CiAgICAgICAgPC9oZWFkZXI+CiAgICAgICAgPG1haW4+CiAgICAgICAgICAgIDxzZWN0aW9uPgogICAgICAgICAgICAgICAgPD9waHAKICAgICAgICAgICAgICAgIC8qKgogICAgICAgICAgICAgICAgICogQGF1dGhvciBWw6lyb25pcXVlIEdydcOpCiAgICAgICAgICAgICAgICAgKiBAdmVyc2lvbiAxLjAKICAgICAgICAgICAgICAgICAqIEBkYXRlIDIwMjUtMTAtMTMgCiAgICAgICAgICAgICAgICAgKiAKICAgICAgICAgICAgICAgICAqCiAgICAgICAgICAgICAgICAgKiBFamVyY2ljaW8gMTIKICAgICAgICAgICAgICAgICAqICogTW9zdHJhciBlbCBjb250ZW5pZG8gZGUgbGFzIHZhcmlhYmxlcyBzdXBlcmdsb2JhbGVzCiAgICAgICAgICAgICAgICAgKi8KICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgc2Vzc2lvbl9zdGFydCgpOyAvLyBTZSBkZWJlIGVqZWN1dGFyIGFudGVzIGRlIGxsYW1hcmxhLCB5IHRpZW5lIHF1ZSBlc3RhciBhbnRlcyBkZSBjdWFscXVpZXIgZXRpcXVldGEgZGUgaHRtbAogICAgICAgICAgICAgICAgLy9Fc3RpbG9zIHBhcmEgbGEgdGFibGEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgICAgICAgICAgIGVjaG8nIAogICAgICAgICAgICAgICAgPHN0eWxlPgogICAgICAgICAgICAgICAgc2VjdGlvbnsKICAgICAgICAgICAgICAgIHdpZHRoOjgwJTsKICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjA7CiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0IDUwcHg7CiAgICAgICAgICAgICAgICB9ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdGFibGUgewogICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDgwJTsKICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCBibGFjazsgCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTsgCiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGgsIHRkIHsKICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsKICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDhweDsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHRoIHsKICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OWNjOyAKICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA4cHg7CiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGQ6bnRoLWNoaWxkKGV2ZW4pIHsKICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjREREREREOyAKICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsKICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7CiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDsKICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6NTBweDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICB0ZDpudGgtY2hpbGQob2RkKSB7CiAgICAgICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4OwogICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICA8L3N0eWxlPic7CgogICAgICAgICAgICAgICAgLy9Db250ZW5pZG8gZGUgbGEgdmFyaWFibGUgJF9TRVJWRVItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAgICAgICAgICAgZWNobyAnPGgzPkNvbnRlbmlkbyBkZSBsYSB2YXJpYWJsZSAkX1NFUlZFUjwvaDM+PGJyPic7CiAgICAgICAgICAgICAgICBlY2hvICc8dGFibGUgPic7CiAgICAgICAgICAgICAgICBlY2hvICc8dHI+PHRoPlZhcmlhYmxlPC90aD48dGg+VmFsb3I8L3RoPjwvdHI+JzsKICAgICAgICAgICAgICAgIGlmICghZW1wdHkoJF9TRVJWRVIpKSB7CiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJF9TRVJWRVIgYXMgJHZhcmlhYmxlID0+ICRyZXN1bHRhZG8pIHsKICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAiPHRyPiI7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gJzx0ZD4kX1NFUlZFUlsnIC4gJHZhcmlhYmxlIC4gJ108L3RkPic7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gIjx0ZD48cHJlPiIgLiBwcmludF9yKCRyZXN1bHRhZG8sIHRydWUpIC4gIjwvcHJlPjwvdGQ+IjsKICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAiPC90cj4iOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgZWNobyAiPHRyPjx0ZCBjb2xzcGFuPScyJz48ZW0+TGEgdmFyaWFibGUgXCRfU0VTU0lPTiBlc3TDoSB2YWPDrWEuPC9lbT48L3RkPjwvdHI+IjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVjaG8gIjwvdGFibGU+IjsKCiAgICAgICAgICAgICAgICAvL0NvbnRlbmlkbyBkZSBsYSB2YXJpYWJsZSAkX0dFVC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgICAgICAgICAgIGVjaG8gJzxicj48YnI+PGgzPkNvbnRlbmlkbyBkZSBsYSB2YXJpYWJsZSAkX0dFVDwvaDM+PGJyPic7CiAgICAgICAgICAgICAgICBlY2hvICc8dGFibGUgPic7CiAgICAgICAgICAgICAgICBlY2hvICc8dHI+PHRoPlZhcmlhYmxlPC90aD48dGg+VmFsb3I8L3RoPjwvdHI+JzsKICAgICAgICAgICAgICAgIGlmICghZW1wdHkoJF9HRVQpKSB7CiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJF9HRVQgYXMgJHZhcmlhYmxlID0+ICRyZXN1bHRhZG8pIHsKICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAiPHRyPiI7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gJzx0ZD4kX0dFVFsnIC4gJHZhcmlhYmxlIC4gJ108L3RkPic7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gIjx0ZD48cHJlPiIgLiBwcmludF9yKCRyZXN1bHRhZG8sIHRydWUpIC4gIjwvcHJlPjwvdGQ+IjsKICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAiPC90cj48YnI+PGJyPiI7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBlY2hvICI8dHI+PHRkIGNvbHNwYW49JzInPjxlbT5MYSB2YXJpYWJsZSBcJF9TRVNTSU9OIGVzdMOhIHZhY8OtYS48L2VtPjwvdGQ+PC90cj4iOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWNobyAiPC90YWJsZT4iOwoKICAgICAgICAgICAgICAgIC8vQ29udGVuaWRvIGRlIGxhIHZhcmlhYmxlICRfUE9TVC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgICAgICAgICBlY2hvICc8YnI+PGJyPjxoMz5Db250ZW5pZG8gZGUgbGEgdmFyaWFibGUgJF9QT1NUPC9oMz48YnI+JzsKICAgICAgICAgICAgICAgIGVjaG8gJzx0YWJsZSA+JzsKICAgICAgICAgICAgICAgIGVjaG8gJzx0cj48dGg+VmFyaWFibGU8L3RoPjx0aD5WYWxvcjwvdGg+PC90cj4nOwogICAgICAgICAgICAgICAgaWYgKCFlbXB0eSgkX1BPU1QpKSB7CiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCAoJF9QT1NUIGFzICR2YXJpYWJsZSA9PiAkcmVzdWx0YWRvKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gIjx0cj4iOwogICAgICAgICAgICAgICAgICAgICAgICBlY2hvICc8dGQ+JF9QT1NUWycgLiAkdmFyaWFibGUgLiAnXTwvdGQ+JzsKICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAiPHRkPjxwcmU+IiAuIHByaW50X3IoJHJlc3VsdGFkbywgdHJ1ZSkgLiAiPC9wcmU+PC90ZD4iOwogICAgICAgICAgICAgICAgICAgICAgICBlY2hvICI8L3RyPiI7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBlY2hvICI8dHI+PHRkIGNvbHNwYW49JzInPjxlbT5MYSB2YXJpYWJsZSBcJF9TRVNTSU9OIGVzdMOhIHZhY8OtYS48L2VtPjwvdGQ+PC90cj4iOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWNobyAiPC90YWJsZT4iOwoKICAgICAgICAgICAgICAgIC8vQ29udGVuaWRvIGRlIGxhIHZhcmlhYmxlICRfRklMRVMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgICAgICAgICBlY2hvICc8YnI+PGJyPjxoMz5Db250ZW5pZG8gZGUgbGEgdmFyaWFibGUgJF9GSUxFUzwvaDM+PGJyPic7CiAgICAgICAgICAgICAgICBlY2hvICc8dGFibGUgPic7CiAgICAgICAgICAgICAgICBlY2hvICc8dHI+PHRoPlZhcmlhYmxlPC90aD48dGg+VmFsb3I8L3RoPjwvdHI+JzsKICAgICAgICAgICAgICAgIGlmICghZW1wdHkoJF9GSUxFUykpIHsKICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkX0ZJTEVTIGFzICR2YXJpYWJsZSA9PiAkcmVzdWx0YWRvKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gIjx0cj4iOwogICAgICAgICAgICAgICAgICAgICAgICBlY2hvICc8dGQ+JF9GSUxFU1snIC4gJHZhcmlhYmxlIC4gJ108L3RkPic7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gIjx0ZD48cHJlPiIgLiBwcmludF9yKCRyZXN1bHRhZG8sIHRydWUpIC4gIjwvcHJlPjwvdGQ+IjsKICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAiPC90cj4iOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgZWNobyAiPHRyPjx0ZCBjb2xzcGFuPScyJz48ZW0+TGEgdmFyaWFibGUgXCRfU0VTU0lPTiBlc3TDoSB2YWPDrWEuPC9lbT48L3RkPjwvdHI+IjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVjaG8gIjwvdGFibGU+IjsKCiAgICAgICAgICAgICAgICAvL0NvbnRlbmlkbyBkZSBsYSB2YXJpYWJsZSAkX0NPT0tJRS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogICAgICAgICAgICAgICAgZWNobyAnPGJyPjxicj48aDM+Q29udGVuaWRvIGRlIGxhIHZhcmlhYmxlICRfQ09PS0lFPC9oMz48YnI+JzsKICAgICAgICAgICAgICAgIGVjaG8gJzx0YWJsZSA+JzsKICAgICAgICAgICAgICAgIGVjaG8gJzx0cj48dGg+VmFyaWFibGU8L3RoPjx0aD5WYWxvcjwvdGg+PC90cj4nOwogICAgICAgICAgICAgICAgaWYgKCFlbXB0eSgkX0NPT0tJRSkpIHsKICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkX0NPT0tJRSBhcyAkdmFyaWFibGUgPT4gJHJlc3VsdGFkbykgewogICAgICAgICAgICAgICAgICAgICAgICBlY2hvICI8dHI+IjsKICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAnPHRkPiRfQ09PS0lFWycgLiAkdmFyaWFibGUgLiAnXTwvdGQ+JzsKICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAiPHRkPjxwcmU+IiAuIHByaW50X3IoJHJlc3VsdGFkbywgdHJ1ZSkgLiAiPC9wcmU+PC90ZD4iOwogICAgICAgICAgICAgICAgICAgICAgICBlY2hvICI8L3RyPiI7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBlY2hvICI8dHI+PHRkIGNvbHNwYW49JzInPjxlbT5MYSB2YXJpYWJsZSBcJF9TRVNTSU9OIGVzdMOhIHZhY8OtYS48L2VtPjwvdGQ+PC90cj4iOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWNobyAiPC90YWJsZT4iOwoKICAgICAgICAgICAgICAgIC8vQ29udGVuaWRvIGRlIGxhIHZhcmlhYmxlICRfU0VTU0lPTi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgICAgICAgICAgIGVjaG8gJzxicj48YnI+PGgzPkNvbnRlbmlkbyBkZSBsYSB2YXJpYWJsZSAkX1NFU1NJT048L2gzPjxicj4nOwogICAgICAgICAgICAgICAgZWNobyAnPHRhYmxlID4nOwogICAgICAgICAgICAgICAgZWNobyAnPHRyPjx0aD5WYXJpYWJsZTwvdGg+PHRoPlZhbG9yPC90aD48L3RyPic7CiAgICAgICAgICAgICAgICBpZiAoIWVtcHR5KCRfU0VTU0lPTikpIHsKICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkX1NFU1NJT04gYXMgJHZhcmlhYmxlID0+ICRyZXN1bHRhZG8pIHsKICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAiPHRyPiI7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gJzx0ZD4kX1NFU1NJT05bJyAuICR2YXJpYWJsZSAuICddPC90ZD4nOwogICAgICAgICAgICAgICAgICAgICAgICBlY2hvICI8dGQ+PHByZT4iIC4gcHJpbnRfcigkcmVzdWx0YWRvLCB0cnVlKSAuICI8L3ByZT48L3RkPiI7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gIjwvdHI+IjsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGVjaG8gIjx0cj48dGQgY29sc3Bhbj0nMic+PGVtPkxhIHZhcmlhYmxlIFwkX1NFU1NJT04gZXN0w6EgdmFjw61hLjwvZW0+PC90ZD48L3RyPiI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlY2hvICI8L3RhYmxlPiI7CgogICAgICAgICAgICAgICAgLy9Db250ZW5pZG8gZGUgbGEgdmFyaWFibGUgJF9SRVFVRVNULS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICAgICAgICAgICAgIGVjaG8gJzxicj48YnI+PGgzPkNvbnRlbmlkbyBkZSBsYSB2YXJpYWJsZSAkX1JFUVVFU1Q8L2gzPjxicj4nOwogICAgICAgICAgICAgICAgZWNobyAnPHRhYmxlID4nOwogICAgICAgICAgICAgICAgZWNobyAnPHRyPjx0aD5WYXJpYWJsZTwvdGg+PHRoPlZhbG9yPC90aD48L3RyPic7CiAgICAgICAgICAgICAgICBpZiAoIWVtcHR5KCRfUkVRVUVTVCkpIHsKICAgICAgICAgICAgICAgICAgICBmb3JlYWNoICgkX1JFUVVFU1QgYXMgJHZhcmlhYmxlID0+ICRyZXN1bHRhZG8pIHsKICAgICAgICAgICAgICAgICAgICAgICAgZWNobyAiPHRyPiI7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gJzx0ZD4kX1JFUVVFU1RbJyAuICR2YXJpYWJsZSAuICddPC90ZD4nOwogICAgICAgICAgICAgICAgICAgICAgICBlY2hvICI8dGQ+PHByZT4iIC4gcHJpbnRfcigkcmVzdWx0YWRvLCB0cnVlKSAuICI8L3ByZT48L3RkPiI7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gIjwvdHI+PGJyPjxicj4iOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgZWNobyAiPHRyPjx0ZCBjb2xzcGFuPScyJz48ZW0+TGEgdmFyaWFibGUgXCRfU0VTU0lPTiBlc3TDoSB2YWPDrWEuPC9lbT48L3RkPjwvdHI+IjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVjaG8gIjwvdGFibGU+IjsKCiAgICAgICAgICAgICAgICAvL0NvbnRlbmlkbyBkZSBsYSB2YXJpYWJsZSAkX0VOVi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAgICAgICAgICAgICBlY2hvICc8YnI+PGJyPjxoMz5Db250ZW5pZG8gZGUgbGEgdmFyaWFibGUgJF9FTlY8L2gzPjxicj4nOwogICAgICAgICAgICAgICAgZWNobyAnPHRhYmxlID4nOwogICAgICAgICAgICAgICAgZWNobyAnPHRyPjx0aD5WYXJpYWJsZTwvdGg+PHRoPlZhbG9yPC90aD48L3RyPic7CiAgICAgICAgICAgICAgICBpZiAoIWVtcHR5KCRfRU5WKSkgewogICAgICAgICAgICAgICAgICAgIGZvcmVhY2ggKCRfRU5WIGFzICR2YXJpYWJsZSA9PiAkcmVzdWx0YWRvKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gIjx0cj4iOwogICAgICAgICAgICAgICAgICAgICAgICBlY2hvICc8dGQ+JF9FTlZbJyAuICR2YXJpYWJsZSAuICddPC90ZD4nOwogICAgICAgICAgICAgICAgICAgICAgICBlY2hvICI8dGQ+PHByZT4iIC4gcHJpbnRfcigkcmVzdWx0YWRvLCB0cnVlKSAuICI8L3ByZT48L3RkPiI7CiAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gIjwvdHI+IjsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGVjaG8gIjx0cj48dGQgY29sc3Bhbj0nMic+PGVtPkxhIHZhcmlhYmxlIFwkX1NFU1NJT04gZXN0w6EgdmFjw61hLjwvZW0+PC90ZD48L3RyPiI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlY2hvICI8L3RhYmxlPjxicj48YnI+IjsKICAgICAgICAgICAgICAgID8+CiAgICAgICAgICAgIDwvc2VjdGlvbj4KCgogICAgICAgIDwvbWFpbj4KICAgICAgICA8Zm9vdGVyIGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXJDb250ZW50Ij4KICAgICAgICAgICAgICAgIDxkaXY+PHAgY2xhc3M9ImNvcHlyaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDIwMjUtMjYgSUVTIExPUyBTQVVDRVMuICYjMTY5O1RvZG9zIGxvcyBkZXJlY2hvcyByZXNlcnZhZG9zLjwvcD4gPGFkZHJlc3M+PGEgaHJlZj0iLi4vaW5kZXhQcm95ZWN0b1RlbWEzLnBocCI+VsOpcm9uaXF1ZSBHcnXDqS48L2E+IEZlY2hhIGRlIEFjdHVhbGl6YWNpw7NuIDoKICAgICAgICAgICAgICAgICAgICAgICAgPHRpbWUgZGF0ZXRpbWU9IjIwMjUtMTAtMTMiPjwvdGltZT4gMTMtMTAtMjAyNSA8L2FkZHJlc3M+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICA8L2Zvb3Rlcj4KCiAgICA8L2JvZHk+CjwvaHRtbD4KCiI7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrIjo3OntzOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAHN1bW1hcnkiO3M6MDoiIjtzOjQ2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawB0YWdzIjthOjM6e2k6MDtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xBdXRob3IiOjQ6e3M6NzoiACoAbmFtZSI7czo2OiJhdXRob3IiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtOO3M6NTc6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xBdXRob3IAYXV0aG9yTmFtZSI7czoxNjoiVsOpcm9uaXF1ZSBHcnXDqSI7czo1ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXEF1dGhvcgBhdXRob3JFbWFpbCI7czowOiIiO31pOjE7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcVmVyc2lvbiI6Mzp7czo3OiIAKgBuYW1lIjtzOjc6InZlcnNpb24iO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjA6IiI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319czo1NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xUYWdzXFZlcnNpb24AdmVyc2lvbiI7czozOiIxLjAiO31pOjI7Tzo0NjoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrXFRhZ3NcR2VuZXJpYyI6Mjp7czo3OiIAKgBuYW1lIjtzOjQ6ImRhdGUiO3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjQ1OiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24iOjI6e3M6NTk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcRGVzY3JpcHRpb24AYm9keVRlbXBsYXRlIjtzOjgwOiIyMDI1LTEwLTEzIAoKCkVqZXJjaWNpbyAxMgoqIE1vc3RyYXIgZWwgY29udGVuaWRvIGRlIGxhcyB2YXJpYWJsZXMgc3VwZXJnbG9iYWxlcyI7czo1MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9ja1xEZXNjcmlwdGlvbgB0YWdzIjthOjA6e319fX1zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGNvbnRleHQiO086Mzg6InBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0IjoyOntzOjQ5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFR5cGVzXENvbnRleHQAbmFtZXNwYWNlIjtzOjA6IiI7czo1NjoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxUeXBlc1xDb250ZXh0AG5hbWVzcGFjZUFsaWFzZXMiO2E6MDp7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXERvY0Jsb2NrAGxvY2F0aW9uIjtOO3M6NTA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2sAaXNUZW1wbGF0ZVN0YXJ0IjtiOjA7czo0ODoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxEb2NCbG9jawBpc1RlbXBsYXRlRW5kIjtiOjA7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";